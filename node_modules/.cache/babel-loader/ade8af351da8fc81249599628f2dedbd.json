{"ast":null,"code":"'use strict';\n\nvar DateTime = require('./src/datetime');\n\nvar TimedNumber = require('./src/timednumber');\n\nvar TimedState = require('./src/timedstate'); // global offsets for datetime\n\n\nvar offsets = {\n  days: 0,\n  hours: 0\n}; // global default format\n\nvar globalDefaultFormat = null;\n\nexports.setOffsetInDays = function (d) {\n  if (isNaN(d)) {\n    throw new Error('invalidOffset');\n  }\n\n  offsets.days = d;\n};\n\nexports.setOffsetInHours = function (h) {\n  if (isNaN(h)) {\n    throw new Error('invalidOffset');\n  }\n\n  offsets.hours = h;\n};\n\nexports.setDefaultFormat = function (format) {\n  globalDefaultFormat = format;\n};\n\nexports.setWeekNames = function (list) {\n  DateTime.setWeekNames(list);\n};\n\nexports.setShortWeekNames = function (list) {\n  DateTime.setShortWeekNames(list);\n};\n\nexports.setMonthName = function (list) {\n  DateTime.setMonthName(list);\n};\n\nexports.setShortMonthNames = function (list) {\n  DateTime.setShortMonthName(list);\n};\n\nexports.setPeriod = function (list) {\n  DateTime.setPeriod(list);\n};\n\nexports.create = function (now, defaultFormat) {\n  if (!defaultFormat && globalDefaultFormat) {\n    defaultFormat = globalDefaultFormat;\n  }\n\n  var d = new DateTime(now, defaultFormat);\n\n  if (offsets.days !== 0) {\n    d.offsetInDays(offsets.days);\n  }\n\n  if (offsets.hours !== 0) {\n    d.offsetInHours(offsets.hours);\n  }\n\n  return d;\n};\n\nexports.createTimedNumber = function (conf) {\n  return new TimedNumber(conf);\n};\n\nexports.createTimedState = function (conf) {\n  return new TimedState(conf);\n};","map":null,"metadata":{},"sourceType":"script"}