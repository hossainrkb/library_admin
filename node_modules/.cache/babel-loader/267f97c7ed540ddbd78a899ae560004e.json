{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\library_management\\\\library_admin\\\\src\\\\pages\\\\add_student.js\";\nimport React, { Component } from 'react';\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  id: \"\",\n  address: \"\",\n  contact: \"\",\n  isSubmitted: true,\n  error: {},\n  holaboi: \"\"\n};\nexport class add_student extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"User Register Form\"), this.state.holaboi && React.createElement(\"p\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.holaboi), React.createElement(\"form\", {\n      ref: this.myForm,\n      onSubmit: this.holaOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Enter Your Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: error.name ? \"form-control is-invalid\" : \"form-control\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), error.name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, error.name)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Enter Your Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      className: error.email ? \"form-control is-invalid\" : \"form-control\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), error.email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, error.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: error.password ? \"form-control is-invalid\" : \"form-control\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), error.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, error.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"cpass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: error.confirmPassword ? \"form-control is-invalid\" : \"form-control\",\n      name: \"confirmPassword\",\n      id: \"cpass\",\n      value: confirmPassword,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), error.confirmPassword && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, error.confirmPassword)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit here\"))))));\n  }\n\n}\nexport default add_student;","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\pages\\add_student.js"],"names":["React","Component","initialState","name","email","id","address","contact","isSubmitted","error","holaboi","add_student","state","render","myForm","holaOnSubmit","takeValueFromInput","password","confirmPassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  id: \"\",\r\n  address: \"\",\r\n  contact: \"\",\r\n  isSubmitted: true,\r\n  error: {},\r\n  holaboi: \"\"\r\n};\r\n\r\nexport class add_student extends Component {\r\n         state = initialState;\r\n\r\n         render() {\r\n           return (\r\n             <div className=\"container\">\r\n               <div className=\"row\">\r\n                 <div className=\"col-md-8 offset-md-2\">\r\n                   <h1 className=\"text-center\">User Register Form</h1>\r\n                   {this.state.holaboi && (\r\n                     <p className=\"text-success\">{this.state.holaboi}</p>\r\n                   )}\r\n                   <form ref={this.myForm} onSubmit={this.holaOnSubmit}>\r\n                     <div className=\"form-group\">\r\n                       <label htmlFor=\"name\">Enter Your Name</label>\r\n                       <input\r\n                         type=\"text\"\r\n                         className={\r\n                           error.name\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"name\"\r\n                         id=\"name\"\r\n                         value={name}\r\n                         onChange={this.takeValueFromInput}\r\n                       />\r\n                       {error.name && (\r\n                         <div className=\"invalid-feedback\">{error.name}</div>\r\n                       )}\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                       <label htmlFor=\"email\">Enter Your Email</label>\r\n                       <input\r\n                         type=\"email\"\r\n                         className={\r\n                           error.email\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"email\"\r\n                         id=\"email\"\r\n                         value={email}\r\n                         onChange={this.takeValueFromInput}\r\n                       />\r\n                       {error.email && (\r\n                         <div className=\"invalid-feedback\">{error.email}</div>\r\n                       )}\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                       <label htmlFor=\"password\">Password</label>\r\n                       <input\r\n                         type=\"password\"\r\n                         className={\r\n                           error.password\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"password\"\r\n                         id=\"password\"\r\n                         value={password}\r\n                         onChange={this.takeValueFromInput}\r\n                       />\r\n                       {error.password && (\r\n                         <div className=\"invalid-feedback\">\r\n                           {error.password}\r\n                         </div>\r\n                       )}\r\n                     </div>\r\n\r\n                     <div className=\"form-group\">\r\n                       <label htmlFor=\"cpass\">Confirm Password</label>\r\n                       <input\r\n                         type=\"password\"\r\n                         className={\r\n                           error.confirmPassword\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"confirmPassword\"\r\n                         id=\"cpass\"\r\n                         value={confirmPassword}\r\n                         onChange={this.takeValueFromInput}\r\n                       />\r\n                       {error.confirmPassword && (\r\n                         <div className=\"invalid-feedback\">\r\n                           {error.confirmPassword}\r\n                         </div>\r\n                       )}\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                       <button className=\"btn btn-sm btn-outline-danger\">\r\n                         Submit here\r\n                       </button>\r\n                     </div>\r\n                   </form>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         }\r\n       }\r\n\r\nexport default add_student;\r\n"]},"metadata":{},"sourceType":"module"}