{"ast":null,"code":"import * as Types from \"./types\";\nimport Axios from \"axios\";\nexport const book_list = () => dispatch => {\n  Axios.get(\"/book/\").then(res => {\n    dispatch({\n      type: Types.BOOK_LIST,\n      payload: {\n        book_list: res.data\n      }\n    });\n  }).catch(error => {});\n};\nexport const issue_book_list = () => dispatch => {\n  Axios.get(\"/book/issue_book_list/\").then(res => {\n    console.log(res.data.i_student_id);\n    dispatch({\n      type: Types.ISSUE_BOOK_LIST,\n      payload: {\n        issue_book_list: res.data\n      }\n    });\n  }).catch(error => {});\n};\nexport const b_register = (book, history) => dispatch => {\n  Axios.post(\"/book/create\", book).then(res => {\n    dispatch({\n      type: Types.BOOK_ERROR,\n      payload: {\n        error: {},\n        hola_success: res.data.message,\n        success: res.data.success_message\n      }\n    });\n    history.push(\"/addBook\");\n    console.log(res.data.success_message);\n  }).catch(error => {\n    dispatch({\n      type: Types.BOOK_ERROR,\n      payload: {\n        error: error.response.data,\n        hola_success: \"\",\n        success: \"\"\n      }\n    });\n  });\n};\nexport const i_book = (book, history) => dispatch => {\n  Axios.post(\"/book/issue\", book).then(res => {\n    dispatch({\n      type: Types.BOOK_ERROR,\n      payload: {\n        error: {},\n        hola_success: res.data.message,\n        success: res.data.success_message\n      }\n    });\n    history.push(\"/issueBook\");\n    console.log(res.data.success_message);\n  }).catch(error => {\n    dispatch({\n      type: Types.BOOK_ERROR,\n      payload: {\n        error: error.response.data,\n        hola_success: \"\",\n        success: \"\"\n      }\n    });\n  });\n};","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\store\\actions\\bookActions.js"],"names":["Types","Axios","book_list","dispatch","get","then","res","type","BOOK_LIST","payload","data","catch","error","issue_book_list","console","log","i_student_id","ISSUE_BOOK_LIST","b_register","book","history","post","BOOK_ERROR","hola_success","message","success","success_message","push","response","i_book"],"mappings":"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","sourcesContent":["import * as Types from \"./types\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\nexport const book_list = () => dispatch => {\r\n  Axios.get(\"/book/\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: Types.BOOK_LIST,\r\n        payload: {\r\n          book_list: res.data\r\n        }\r\n      });\r\n    })\r\n    .catch(error => {\r\n   \r\n    });\r\n};\r\nexport const issue_book_list = () => dispatch => {\r\n  Axios.get(\"/book/issue_book_list/\")\r\n    .then(res => {\r\n      console.log(res.data.i_student_id)\r\n      dispatch({\r\n        type: Types.ISSUE_BOOK_LIST,\r\n        payload: {\r\n          issue_book_list: res.data\r\n        }\r\n      });\r\n    })\r\n    .catch(error => {});\r\n};\r\n\r\n\r\nexport const b_register = (book, history) => dispatch => {\r\n  Axios.post(\"/book/create\", book)\r\n    .then(res => {\r\n      dispatch({\r\n        type: Types.BOOK_ERROR,\r\n        payload: {\r\n          error: {},\r\n          hola_success: res.data.message,\r\n          success: res.data.success_message\r\n        }\r\n      });\r\n      history.push(\"/addBook\");\r\n      console.log(res.data.success_message);\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: Types.BOOK_ERROR,\r\n        payload: {\r\n          error: error.response.data,\r\n          hola_success: \"\",\r\n          success: \"\"\r\n        }\r\n      });\r\n    });\r\n};\r\nexport const i_book = (book, history) => dispatch => {\r\n  Axios.post(\"/book/issue\", book)\r\n    .then(res => {\r\n      dispatch({\r\n        type: Types.BOOK_ERROR,\r\n        payload: {\r\n          error: {},\r\n          hola_success: res.data.message,\r\n          success: res.data.success_message\r\n        }\r\n      });\r\n      history.push(\"/issueBook\");\r\n      console.log(res.data.success_message);\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: Types.BOOK_ERROR,\r\n        payload: {\r\n          error: error.response.data,\r\n          hola_success: \"\",\r\n          success: \"\"\r\n        }\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}