{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\library_management\\\\library_admin\\\\src\\\\pages\\\\return_book.js\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { r_book, pay } from \"../store/actions/bookActions\";\nimport Modal from \"react-modal\";\nconst initialState = {};\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nexport class return_book extends Component {\n  // state = initialState;\n  constructor() {\n    super();\n\n    this.takeValueFromInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.takeValueFromInputPaid = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.holaOnSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          b_code = _this$state.b_code,\n          s_roll = _this$state.s_roll,\n          u_i_r_date = _this$state.u_i_r_date;\n      this.props.r_book({\n        b_code,\n        s_roll,\n        u_i_r_date\n      }, this.props.history);\n    };\n\n    this.paidSubmit = e => {\n      e.preventDefault();\n      let i_paid = this.state.i_paid;\n      this.props.pay({\n        i_paid\n      }, this.props.history);\n    };\n\n    this.state = {\n      modalIsOpen: false,\n      b_code: \"\",\n      s_roll: \"\",\n      u_i_r_date: moment().format(\"YYYY-MM-DD\"),\n      isSubmitted: true,\n      isHola: true,\n      error: {},\n      holaboi: \"\",\n      success: \"\",\n      book_fine_message: \"\",\n      book_fine: \"\",\n      ck_key: \"\",\n      paid_message: \"\",\n      paid_error: {},\n      i_paid: \"\"\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => this.setState({\n      success: this.props.book_success\n    }), 20);\n    setTimeout(() => this.setState({\n      holaboi: this.props.book\n    }), 20);\n    setTimeout(() => this.setState({\n      error: this.props.book_er\n    }), 20);\n    setTimeout(() => this.setState({\n      book_fine_message: this.props.book_fine_message\n    }), 20);\n    setTimeout(() => this.setState({\n      book_fine: this.props.book_fine\n    }), 20);\n    setTimeout(() => this.setState({\n      ck_key: this.props.ck_key\n    }), 20);\n    setTimeout(() => this.setState({\n      paid_message: this.props.paid_message\n    }), 20);\n    setTimeout(() => this.setState({\n      paid_error: this.props.paid_error\n    }), 20);\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        b_code = _this$state2.b_code,\n        s_roll = _this$state2.s_roll,\n        u_i_r_date = _this$state2.u_i_r_date,\n        error = _this$state2.error,\n        i_paid = _this$state2.i_paid,\n        paid_error = _this$state2.paid_error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.book_fine_message && React.createElement(\"p\", {\n      className: \"text-danger text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.book_fine, this.state.book_fine_message, this.state.ck_key, \" \", React.createElement(\"button\", {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Pay\")), React.createElement(\"button\", {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Open Modal\"), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      ref: subtitle => this.subtitle = subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Pay Fine\"), React.createElement(\"form\", {\n      onSubmit: this.paidSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"payment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Payment:\"), \" \"), React.createElement(\"input\", {\n      type: \"hidden\",\n      className: paid_error.payment ? \"form-control is-invalid\" : \"form-control\",\n      name: \"p_i_r_date\",\n      id: \"payment\",\n      value: this.state.book_fine,\n      onChange: this.takeValueFromInputPaid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      className: paid_error.payment ? \"form-control is-invalid\" : \"form-control\",\n      name: \"i_fine\",\n      id: \"payment\",\n      value: this.state.book_fine,\n      onChange: this.takeValueFromInputPaid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: paid_error.payment ? \"form-control is-invalid\" : \"form-control\",\n      name: \"i_paid\",\n      id: \"payment\",\n      value: i_paid,\n      onChange: this.takeValueFromInputPaid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), paid_error.payment && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, paid_error.payment), React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-danger float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"PAID\"))), React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"BOOK RETURN FORM\"), this.state.holaboi && React.createElement(\"p\", {\n      className: \"text-danger text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.holaboi), this.state.success && React.createElement(\"p\", {\n      className: \"text-success text-center\",\n      id: \"bro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.success), React.createElement(\"form\", {\n      onSubmit: this.holaOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"u_i_r_date\",\n      value: u_i_r_date,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"50px\"\n      },\n      htmlFor: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"BOOK CODE:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.code ? \"form-control is-invalid\" : \"form-control\",\n      name: \"b_code\",\n      id: \"code\",\n      value: b_code,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), error.code && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, error.code)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"50px\"\n      },\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"STUDENT ID:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.roll ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_roll\",\n      id: \"id\",\n      value: s_roll,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \" \", error.roll && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, error.roll))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-info float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"RETURN BOOK\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  book: state.bk.re_hola_success,\n  book_er: state.bk.re_error,\n  book_success: state.bk.re_success,\n  book_fine_message: state.bk.fine_message,\n  book_fine: state.bk.fine,\n  ck_key: state.bk.ck_key,\n  paid_error: state.bk.paid_error,\n  paid_message: state.bk.paid_message\n});\n\nexport default connect(mapStateToProps, {\n  r_book,\n  pay\n})(return_book);","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\pages\\return_book.js"],"names":["moment","React","Component","connect","r_book","pay","Modal","initialState","customStyles","content","top","left","right","bottom","marginRight","transform","return_book","constructor","takeValueFromInput","e","setState","target","name","value","takeValueFromInputPaid","holaOnSubmit","preventDefault","state","b_code","s_roll","u_i_r_date","props","history","paidSubmit","i_paid","modalIsOpen","format","isSubmitted","isHola","error","holaboi","success","book_fine_message","book_fine","ck_key","paid_message","paid_error","openModal","bind","afterOpenModal","closeModal","subtitle","style","color","componentDidUpdate","setTimeout","book_success","book","book_er","render","payment","marginLeft","code","roll","mapStateToProps","bk","re_hola_success","re_error","re_success","fine_message","fine"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { r_book, pay } from \"../store/actions/bookActions\";\r\nimport Modal from \"react-modal\";\r\nconst initialState = {\r\n\r\n};\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n  }\r\n};\r\n\r\nexport class return_book extends Component {\r\n         // state = initialState;\r\n         constructor() {\r\n           super();\r\n\r\n           this.state = {\r\n             modalIsOpen: false,\r\n             b_code: \"\",\r\n             s_roll: \"\",\r\n             u_i_r_date: moment().format(\"YYYY-MM-DD\"),\r\n             isSubmitted: true,\r\n             isHola: true,\r\n             error: {},\r\n             holaboi: \"\",\r\n             success: \"\",\r\n             book_fine_message: \"\",\r\n             book_fine: \"\",\r\n             ck_key: \"\",\r\n             paid_message: \"\",\r\n             paid_error: {},\r\n             i_paid: \"\"\r\n           };\r\n\r\n           this.openModal = this.openModal.bind(this);\r\n           this.afterOpenModal = this.afterOpenModal.bind(this);\r\n           this.closeModal = this.closeModal.bind(this);\r\n         }\r\n\r\n         openModal() {\r\n           this.setState({ modalIsOpen: true });\r\n         }\r\n\r\n         afterOpenModal() {\r\n           // references are now sync'd and can be accessed.\r\n           this.subtitle.style.color = \"#f00\";\r\n         }\r\n\r\n         closeModal() {\r\n           this.setState({ modalIsOpen: false });\r\n         }\r\n         takeValueFromInput = e => {\r\n           this.setState({\r\n             [e.target.name]: e.target.value\r\n           });\r\n         };\r\n         takeValueFromInputPaid = e => {\r\n           this.setState({\r\n             [e.target.name]: e.target.value\r\n           });\r\n         };\r\n\r\n         holaOnSubmit = e => {\r\n           e.preventDefault();\r\n           let { b_code, s_roll, u_i_r_date } = this.state;\r\n           this.props.r_book(\r\n             { b_code, s_roll, u_i_r_date },\r\n             this.props.history\r\n           );\r\n         };\r\n         paidSubmit = e => {\r\n           e.preventDefault();\r\n           let { i_paid} = this.state;\r\n           this.props.pay(\r\n             { i_paid },\r\n             this.props.history\r\n           );\r\n         };\r\n         componentDidUpdate() {\r\n           setTimeout(\r\n             () => this.setState({ success: this.props.book_success }),\r\n             20\r\n           );\r\n           setTimeout(() => this.setState({ holaboi: this.props.book }), 20);\r\n           setTimeout(() => this.setState({ error: this.props.book_er }), 20);\r\n           setTimeout(\r\n             () =>\r\n               this.setState({\r\n                 book_fine_message: this.props.book_fine_message\r\n               }),\r\n             20\r\n           );\r\n           setTimeout(\r\n             () => this.setState({ book_fine: this.props.book_fine }),\r\n             20\r\n           );\r\n           setTimeout(() => this.setState({ ck_key: this.props.ck_key }), 20);\r\n           setTimeout(\r\n             () => this.setState({ paid_message: this.props.paid_message }),\r\n             20\r\n           );\r\n           setTimeout(\r\n             () => this.setState({ paid_error: this.props.paid_error }),\r\n             20\r\n           );\r\n         }\r\n\r\n         render() {\r\n           let { b_code, s_roll, u_i_r_date, error,i_paid,paid_error } = this.state;\r\n           return (\r\n             <div className=\"container\">\r\n               <div className=\"row\">\r\n                 <div className=\"col-md-12 offset-md-1\">\r\n                   {this.state.book_fine_message && (\r\n                     <p className=\"text-danger text-center\">\r\n                       {this.state.book_fine}\r\n                       {this.state.book_fine_message}\r\n                       {this.state.ck_key}{\" \"}\r\n                       <button onClick={this.openModal}>Pay</button>\r\n                     </p>\r\n                   )}\r\n\r\n                   <button onClick={this.openModal}>Open Modal</button>\r\n                   <Modal\r\n                     isOpen={this.state.modalIsOpen}\r\n                     onAfterOpen={this.afterOpenModal}\r\n                     onRequestClose={this.closeModal}\r\n                     style={customStyles}\r\n                     contentLabel=\"Example Modal\"\r\n                   >\r\n                     <h2 ref={subtitle => (this.subtitle = subtitle)}>\r\n                       Pay Fine\r\n                     </h2>\r\n\r\n                     <form onSubmit={this.paidSubmit}>\r\n                       <label htmlFor=\"payment\">\r\n                         <b>Payment:</b>{\" \"}\r\n                       </label>\r\n                       <input\r\n                         type=\"hidden\"\r\n                         className={\r\n                           paid_error.payment\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"p_i_r_date\"\r\n                         id=\"payment\"\r\n                         value={this.state.book_fine}\r\n                         onChange={this.takeValueFromInputPaid}\r\n                       />\r\n                       <input\r\n                         type=\"hidden\"\r\n                         className={\r\n                           paid_error.payment\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"i_fine\"\r\n                         id=\"payment\"\r\n                         value={this.state.book_fine}\r\n                         onChange={this.takeValueFromInputPaid}\r\n                       />\r\n                       <input\r\n                         type=\"number\"\r\n                         className={\r\n                           paid_error.payment\r\n                             ? \"form-control is-invalid\"\r\n                             : \"form-control\"\r\n                         }\r\n                         name=\"i_paid\"\r\n                         id=\"payment\"\r\n                         value={i_paid}\r\n                         onChange={this.takeValueFromInputPaid}\r\n                       />\r\n                       {paid_error.payment && (\r\n                         <div className=\"invalid-feedback\">\r\n                           {paid_error.payment}\r\n                         </div>\r\n                       )}\r\n                       <button className=\"btn btn-sm btn-outline-danger float-right\">\r\n                         PAID\r\n                       </button>\r\n                     </form>\r\n                   </Modal>\r\n                   <h1 className=\"text-center\">BOOK RETURN FORM</h1>\r\n\r\n                   {this.state.holaboi && (\r\n                     <p className=\"text-danger text-center\">\r\n                       {this.state.holaboi}\r\n                     </p>\r\n                   )}\r\n                   {this.state.success && (\r\n                     <p className=\"text-success text-center\" id=\"bro\">\r\n                       {this.state.success}\r\n                     </p>\r\n                   )}\r\n                   <form onSubmit={this.holaOnSubmit}>\r\n                     <input\r\n                       type=\"hidden\"\r\n                       name=\"u_i_r_date\"\r\n                       value={u_i_r_date}\r\n                       onChange={this.takeValueFromInput}\r\n                     />\r\n\r\n                     <table className=\"table \">\r\n                       <tbody>\r\n                         <tr>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"50px\" }}\r\n                               htmlFor=\"code\"\r\n                             >\r\n                               <b>BOOK CODE:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.code\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"b_code\"\r\n                               id=\"code\"\r\n                               value={b_code}\r\n                               onChange={this.takeValueFromInput}\r\n                             />\r\n                             {error.code && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.code}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                           <td>\r\n                             <label style={{ marginLeft: \"50px\" }} htmlFor=\"id\">\r\n                               <b>STUDENT ID:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.roll\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_roll\"\r\n                               id=\"id\"\r\n                               value={s_roll}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.roll && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.roll}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>\r\n                             <button className=\"btn btn-sm btn-outline-info float-right\">\r\n                               RETURN BOOK\r\n                             </button>\r\n                           </td>\r\n                         </tr>\r\n                       </tbody>\r\n                     </table>\r\n                   </form>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         }\r\n       }\r\n\r\nconst mapStateToProps = state => ({\r\n  book: state.bk.re_hola_success,\r\n  book_er: state.bk.re_error,\r\n  book_success: state.bk.re_success,\r\n  book_fine_message: state.bk.fine_message,\r\n  book_fine: state.bk.fine,\r\n  ck_key: state.bk.ck_key,\r\n  paid_error: state.bk.paid_error,\r\n  paid_message: state.bk.paid_message\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { r_book,pay }\r\n)(return_book);\r\n"]},"metadata":{},"sourceType":"module"}