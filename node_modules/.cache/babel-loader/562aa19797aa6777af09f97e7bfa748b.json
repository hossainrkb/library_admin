{"ast":null,"code":"import * as Types from './types';\nimport Axios from 'axios';\nimport jwtDecode from \"jwt-decode\";\nexport const admin_login = (admin, history) => dispatch => {\n  Axios.post(\"/admin/login\", admin).then(res => {\n    let token = res.data.token;\n\n    if (token) {\n      localStorage.setItem(\"admin_auth_token\", token); //let decode = jwtDecode(token);\n\n      dispatch({\n        type: Types.SET_ADMIN,\n        payload: {\n          admin: token\n        }\n      });\n      history.push(\"/\");\n    } else {\n      dispatch({\n        type: Types.ADMIN_ERROR,\n        payload: {\n          error: {},\n          hola_success: res.data.message\n        }\n      });\n    }\n  }).catch(error => {\n    dispatch({\n      type: Types.ADMIN_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\store\\actions\\adminAction.js"],"names":["Types","Axios","jwtDecode","admin_login","admin","history","dispatch","post","then","res","token","data","localStorage","setItem","type","SET_ADMIN","payload","push","ADMIN_ERROR","error","hola_success","message","catch","response"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoBC,QAAQ,IAAI;AACzDL,EAAAA,KAAK,CAACM,IAAN,CAAW,cAAX,EAA2BH,KAA3B,EACGI,IADH,CACQC,GAAG,IAAI;AACX,QAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAArB;;AACA,QAAIA,KAAJ,EAAW;AACTE,MAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCH,KAAzC,EADS,CAET;;AACAJ,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,KAAK,CAACe,SADL;AAEPC,QAAAA,OAAO,EAAE;AACPZ,UAAAA,KAAK,EAAEM;AADA;AAFF,OAAD,CAAR;AAMAL,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD,KAVD,MAUO;AACLX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,KAAK,CAACkB,WADL;AAEPF,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAE,EADA;AAEPC,UAAAA,YAAY,EAAEX,GAAG,CAACE,IAAJ,CAASU;AAFhB;AAFF,OAAD,CAAR;AAOD;AACF,GAtBH,EAuBGC,KAvBH,CAuBSH,KAAK,IAAI;AACdb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,KAAK,CAACkB,WADL;AAEPF,MAAAA,OAAO,EAAE;AACPG,QAAAA,KAAK,EAAEA,KAAK,CAACI,QAAN,CAAeZ;AADf;AAFF,KAAD,CAAR;AAMD,GA9BH;AA+BD,CAhCM","sourcesContent":["import * as Types from './types'\r\nimport Axios from 'axios'\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nexport const admin_login = (admin, history) => dispatch => {\r\n  Axios.post(\"/admin/login\", admin)\r\n    .then(res => {\r\n      let token = res.data.token;\r\n      if (token) {\r\n        localStorage.setItem(\"admin_auth_token\", token);\r\n        //let decode = jwtDecode(token);\r\n        dispatch({\r\n          type: Types.SET_ADMIN,\r\n          payload: {\r\n            admin: token\r\n          }\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        dispatch({\r\n          type: Types.ADMIN_ERROR,\r\n          payload: {\r\n            error: {},\r\n            hola_success: res.data.message\r\n          }\r\n        });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: Types.ADMIN_ERROR,\r\n        payload: {\r\n          error: error.response.data\r\n        }\r\n      });\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}