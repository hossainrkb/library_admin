{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\library_management\\\\library_admin\\\\src\\\\pages\\\\add_student.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { s_register } from \"../store/actions/studentActions\";\nconst initialState = {\n  s_name: \"\",\n  s_email: \"\",\n  s_roll: \"\",\n  s_address: \"\",\n  s_contact: \"\",\n  isSubmitted: true,\n  error: {},\n  holaboi: \"\"\n};\nexport class add_student extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.takeValueFromInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.holaOnSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          id = _this$state.id,\n          address = _this$state.address,\n          contact = _this$state.contact;\n      this.props.s_register({\n        name,\n        email,\n        id,\n        address,\n        contact\n      }, this.props.history);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (JSON.stringify(nextProps.std.error) !== JSON.stringify(prevState.error)) {\n      return {\n        error: nextProps.std.error\n      };\n    } else if (JSON.stringify(nextProps.std.hola_success) !== JSON.stringify(prevState.hola_success)) {\n      return {\n        holaboi: nextProps.std.hola_success\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        name = _this$state2.name,\n        email = _this$state2.email,\n        id = _this$state2.id,\n        address = _this$state2.address,\n        contact = _this$state2.contact,\n        error = _this$state2.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Student Registration Form\"), this.state.holaboi && React.createElement(\"p\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.holaboi), React.createElement(\"form\", {\n      onSubmit: this.holaOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"ID no:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.id ? \"form-control is-invalid\" : \"form-control\",\n      name: \"id\",\n      id: \"id\",\n      value: id,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), error.id && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, error.id)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Name:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.name ? \"form-control is-invalid\" : \"form-control\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" \", error.name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, error.name))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Email:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: error.email ? \"form-control is-invalid\" : \"form-control\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \" \", error.email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, error.email)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Contact Number:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.contact ? \"form-control is-invalid\" : \"form-control\",\n      name: \"contact\",\n      id: \"contact\",\n      value: contact,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \" \", error.contact && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, error.contact))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Address:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: error.address ? \"form-control is-invalid\" : \"form-control\",\n      name: \"address\",\n      id: \"address\",\n      value: address,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), error.address && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, error.address))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-info float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Registration\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  std: state.std\n});\n\nexport default connect(mapStateToProps, {\n  s_register\n})(add_student);","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\pages\\add_student.js"],"names":["React","Component","connect","s_register","initialState","s_name","s_email","s_roll","s_address","s_contact","isSubmitted","error","holaboi","add_student","state","takeValueFromInput","e","setState","target","name","value","holaOnSubmit","preventDefault","email","id","address","contact","props","history","getDerivedStateFromProps","nextProps","prevState","JSON","stringify","std","hola_success","render","marginLeft","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { s_register } from \"../store/actions/studentActions\";\r\nconst initialState = {\r\n  s_name: \"\",\r\n  s_email: \"\",\r\n  s_roll: \"\",\r\n  s_address: \"\",\r\n  s_contact: \"\",\r\n  isSubmitted: true,\r\n  error: {},\r\n  holaboi: \"\"\r\n};\r\n\r\nexport class add_student extends Component {\r\n         state = initialState;\r\n         static getDerivedStateFromProps(nextProps, prevState) {\r\n           if (\r\n             JSON.stringify(nextProps.std.error) !==\r\n             JSON.stringify(prevState.error)\r\n           ) {\r\n             return {\r\n               error: nextProps.std.error\r\n             };\r\n           } else if (\r\n             JSON.stringify(nextProps.std.hola_success) !==\r\n             JSON.stringify(prevState.hola_success)\r\n           ) {\r\n             return {\r\n               holaboi: nextProps.std.hola_success\r\n             };\r\n           }\r\n\r\n           return null;\r\n         }\r\n         takeValueFromInput = e => {\r\n           this.setState({\r\n             [e.target.name]: e.target.value\r\n           });\r\n         };\r\n\r\n         holaOnSubmit = e => {\r\n           e.preventDefault();\r\n           let { name, email, id, address, contact } = this.state;\r\n           this.props.s_register(\r\n             { name, email, id, address, contact },\r\n             this.props.history\r\n           );\r\n         };\r\n         render() {\r\n           let { name, email, id, address, contact, error } = this.state;\r\n           return (\r\n             <div className=\"container\">\r\n               <div className=\"row\">\r\n                 <div className=\"col-md-12 offset-md-1\">\r\n                   <h1 className=\"text-center\">Student Registration Form</h1>\r\n                   {this.state.holaboi && (\r\n                     <p className=\"text-success\">{this.state.holaboi}</p>\r\n                   )}\r\n                   <form  onSubmit={this.holaOnSubmit}>\r\n                     <table className=\"table \">\r\n                       <tbody>\r\n                         <tr>\r\n                           <td>\r\n                             <label style={{ marginLeft: \"80px\" }} htmlFor=\"id\">\r\n                               <b>ID no:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.id\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"id\"\r\n                               id=\"id\"\r\n                               value={id}\r\n                               onChange={this.takeValueFromInput}\r\n                             />\r\n                             {error.id && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.id}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"80px\" }}\r\n                               htmlFor=\"name\"\r\n                             >\r\n                               <b>Name:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.name\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"name\"\r\n                               id=\"name\"\r\n                               value={name}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.name && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.name}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"80px\" }}\r\n                               htmlFor=\"email\"\r\n                             >\r\n                               <b>Email:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"email\"\r\n                               className={\r\n                                 error.email\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"email\"\r\n                               id=\"email\"\r\n                               value={email}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.email && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.email}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                           <td>\r\n                             <label htmlFor=\"contact\">\r\n                               <b>Contact Number:</b>\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.contact\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"contact\"\r\n                               id=\"contact\"\r\n                               value={contact}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.contact && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.contact}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"80px\" }}\r\n                               htmlFor=\"address\"\r\n                             >\r\n                               <b>Address:</b>\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <textarea\r\n                               className={\r\n                                 error.address\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"address\"\r\n                               id=\"address\"\r\n                               value={address}\r\n                               onChange={this.takeValueFromInput}\r\n                             ></textarea>\r\n                             {error.address && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.address}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n                         <tr>\r\n                           <td></td>\r\n\r\n                           <td>\r\n                             <button className=\"btn btn-sm btn-outline-info float-right\">\r\n                               Registration\r\n                             </button>\r\n                           </td>\r\n                         </tr>\r\n                       </tbody>\r\n                     </table>\r\n                   </form>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         }\r\n       }\r\n\r\n       const mapStateToProps = state => ({\r\n  std: state.std\r\n});\r\n\r\nexport default connect(mapStateToProps,{s_register})(add_student);\r\n\r\n"]},"metadata":{},"sourceType":"module"}