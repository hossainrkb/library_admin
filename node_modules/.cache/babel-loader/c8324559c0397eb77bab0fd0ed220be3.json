{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\library_management\\\\library_admin\\\\src\\\\pages\\\\add_student.js\";\nimport React, { Component } from 'react';\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  id: \"\",\n  address: \"\",\n  contact: \"\",\n  isSubmitted: true,\n  error: {},\n  holaboi: \"\"\n};\nexport class add_student extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.takeValueFromInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.holaOnSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          id = _this$state.id,\n          address = _this$state.address,\n          contact = _this$state.contact;\n      this.props.register({\n        name,\n        email,\n        id,\n        address,\n        contact\n      }, this.props.history);\n    };\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        name = _this$state2.name,\n        email = _this$state2.email,\n        id = _this$state2.id,\n        address = _this$state2.address,\n        contact = _this$state2.contact,\n        error = _this$state2.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Student Registration Form\"), this.state.holaboi && React.createElement(\"p\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.holaboi), React.createElement(\"form\", {\n      ref: this.myForm,\n      onSubmit: this.holaOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"ID no:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.id ? \"form-control is-invalid\" : \"form-control\",\n      name: \"id\",\n      id: \"id\",\n      value: id,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), error.id && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, error.id)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Name:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.s_name ? \"form-control is-invalid\" : \"form-control\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), error.s_name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, error.s_name))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Email:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: error.email ? \"form-control is-invalid\" : \"form-control\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), error.s_email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, error.s_email)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Contact Number:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.contact ? \"form-control is-invalid\" : \"form-control\",\n      name: \"contact\",\n      id: \"contact\",\n      value: contact,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), error.s_contact && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, error.s_contact))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Address:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: error.contact ? \"form-control is-invalid\" : \"form-control\",\n      name: \"address\",\n      id: \"address\",\n      value: address,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-info float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Registration\"))))))));\n  }\n\n}\nexport default add_student;","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\pages\\add_student.js"],"names":["React","Component","initialState","name","email","id","address","contact","isSubmitted","error","holaboi","add_student","state","takeValueFromInput","e","setState","target","value","holaOnSubmit","preventDefault","props","register","history","render","myForm","marginLeft","s_name","s_email","s_contact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  id: \"\",\r\n  address: \"\",\r\n  contact: \"\",\r\n  isSubmitted: true,\r\n  error: {},\r\n  holaboi: \"\"\r\n};\r\n\r\nexport class add_student extends Component {\r\n         state = initialState;\r\n         takeValueFromInput = e => {\r\n           this.setState({\r\n             [e.target.name]: e.target.value\r\n           });\r\n         };\r\n\r\n         holaOnSubmit = e => {\r\n           e.preventDefault();\r\n           let { name, email, id, address,contact } = this.state;\r\n           this.props.register(\r\n             { name, email, id, address, contact },\r\n             this.props.history\r\n           );\r\n         };\r\n         render() {\r\n               let { name, email, id, address, contact,error } = this.state;\r\n           return (\r\n             <div className=\"container\">\r\n               <div className=\"row\">\r\n                 <div className=\"col-md-12 offset-md-1\">\r\n                   <h1 className=\"text-center\">Student Registration Form</h1>\r\n                   {this.state.holaboi && (\r\n                     <p className=\"text-success\">{this.state.holaboi}</p>\r\n                   )}\r\n                   <form ref={this.myForm} onSubmit={this.holaOnSubmit}>\r\n                     <table className=\"table \">\r\n                       <tr>\r\n                         <td>\r\n                           <label style={{ marginLeft: \"80px\" }} htmlFor=\"id\">\r\n                             <b>ID no:</b>{\" \"}\r\n                           </label>\r\n                         </td>\r\n                         <td>\r\n                           <input\r\n                             type=\"text\"\r\n                             className={\r\n                               error.id\r\n                                 ? \"form-control is-invalid\"\r\n                                 : \"form-control\"\r\n                             }\r\n                             name=\"id\"\r\n                             id=\"id\"\r\n                             value={id}\r\n                             onChange={this.takeValueFromInput}\r\n                           />\r\n                           <br />\r\n                           {error.id && (\r\n                             <div className=\"invalid-feedback\">{error.id}</div>\r\n                           )}\r\n                         </td>\r\n                         <td>\r\n                           <label style={{ marginLeft: \"80px\" }} htmlFor=\"name\">\r\n                             <b>Name:</b>{\" \"}\r\n                           </label>\r\n                         </td>\r\n                         <td>\r\n                           <input\r\n                             type=\"text\"\r\n                             className={\r\n                               error.s_name\r\n                                 ? \"form-control is-invalid\"\r\n                                 : \"form-control\"\r\n                             }\r\n                             name=\"name\"\r\n                             id=\"name\"\r\n                             value={name}\r\n                             onChange={this.takeValueFromInput}\r\n                           />{\" \"}\r\n                           <br />\r\n                           {error.s_name && (\r\n                             <div className=\"invalid-feedback\">\r\n                               {error.s_name}\r\n                             </div>\r\n                           )}\r\n                         </td>\r\n                       </tr>\r\n\r\n                       <tr>\r\n                         <td>\r\n                           <label\r\n                             style={{ marginLeft: \"80px\" }}\r\n                             htmlFor=\"email\"\r\n                           >\r\n                             <b>Email:</b>{\" \"}\r\n                           </label>\r\n                         </td>\r\n                         <td>\r\n                           <input\r\n                             type=\"email\"\r\n                             className={\r\n                               error.email\r\n                                 ? \"form-control is-invalid\"\r\n                                 : \"form-control\"\r\n                             }\r\n                             name=\"email\"\r\n                             id=\"email\"\r\n                             value={email}\r\n                             onChange={this.takeValueFromInput}\r\n                           />{\" \"}\r\n                           <br />\r\n                           {error.s_email && (\r\n                             <div className=\"invalid-feedback\">\r\n                               {error.s_email}\r\n                             </div>\r\n                           )}\r\n                         </td>\r\n                         <td>\r\n                           <label htmlFor=\"contact\">\r\n                             <b>Contact Number:</b>\r\n                           </label>\r\n                         </td>\r\n                         <td>\r\n                           <input\r\n                             type=\"text\"\r\n                             className={\r\n                               error.contact\r\n                                 ? \"form-control is-invalid\"\r\n                                 : \"form-control\"\r\n                             }\r\n                             name=\"contact\"\r\n                             id=\"contact\"\r\n                             value={contact}\r\n                             onChange={this.takeValueFromInput}\r\n                           />{\" \"}\r\n                           <br />\r\n                           {error.s_contact && (\r\n                             <div className=\"invalid-feedback\">\r\n                               {error.s_contact}\r\n                             </div>\r\n                           )}\r\n                         </td>\r\n                       </tr>\r\n\r\n                       <tr>\r\n                         <td>\r\n                           <label\r\n                             style={{ marginLeft: \"80px\" }}\r\n                             htmlFor=\"address\"\r\n                           >\r\n                             <b>Address:</b>\r\n                           </label>\r\n                         </td>\r\n                         <td>\r\n                           <textarea\r\n                             className={\r\n                               error.contact\r\n                                 ? \"form-control is-invalid\"\r\n                                 : \"form-control\"\r\n                             }\r\n                             name=\"address\"\r\n                             id=\"address\"\r\n                             value={address}\r\n                             onChange={this.takeValueFromInput}\r\n                           ></textarea>\r\n                         </td>\r\n                       </tr>\r\n                       <tr>\r\n                         <td></td>\r\n\r\n                         <td>\r\n                           <button className=\"btn btn-sm btn-outline-info float-right\">\r\n                             Registration\r\n                           </button>\r\n                         </td>\r\n                       </tr>\r\n                     </table>\r\n                   </form>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         }\r\n       }\r\n\r\nexport default add_student;\r\n"]},"metadata":{},"sourceType":"module"}