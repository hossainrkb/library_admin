{"ast":null,"code":"import * as Types from \"./types\";\nimport Axios from \"axios\";\nexport const s_register = (student, history) => dispatch => {\n  Axios.post(\"/student/create\", student).then(res => {\n    dispatch({\n      type: Types.STUDENT_ERROR,\n      payload: {\n        error: {},\n        hola_success: res.data.message,\n        success: res.data.success_message\n      }\n    });\n    history.push(\"/addStudent\");\n    console.log(res.data.success_message);\n  }).catch(error => {\n    dispatch({\n      type: Types.STUDENT_ERROR,\n      payload: {\n        error: error.response.data,\n        hola_success: \"\",\n        success: \"\"\n      }\n    });\n  });\n};\nexport const student_list = () => dispatch => {\n  Axios.get(\"/student/\").then(res => {\n    dispatch({\n      type: Types.STUDENT_LIST,\n      payload: {\n        student_list: res.data\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: Types.STUDENT_ERROR,\n      payload: {\n        error: error\n      }\n    });\n  });\n};\nexport const getStudentByID = id => dispatch => {\n  Axios.get(\"/student/\".concat(id)).then(response => {\n    dispatch({\n      type: Types.GET_STD_BY_ID,\n      payload: {\n        student: response.data\n      }\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const SearchStd = search => dispatch => {\n  console.log(\"mama\");\n  Axios.get(\"/student/std/search\", search).then(response => {\n    dispatch({\n      type: Types.SEARCH_STD,\n      payload: {\n        search_student: response.data\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: Types.STUDENT_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\store\\actions\\studentActions.js"],"names":["Types","Axios","s_register","student","history","dispatch","post","then","res","type","STUDENT_ERROR","payload","error","hola_success","data","message","success","success_message","push","console","log","catch","response","student_list","get","STUDENT_LIST","getStudentByID","id","GET_STD_BY_ID","SearchStd","search","SEARCH_STD","search_student"],"mappings":"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","sourcesContent":["import * as Types from \"./types\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport const s_register = (student, history) => dispatch => {\r\n  \r\n  Axios.post(\"/student/create\", student)\r\n    .then(res => {\r\n      dispatch({\r\n        type: Types.STUDENT_ERROR,\r\n        payload: {\r\n          error: {},\r\n          hola_success: res.data.message,\r\n          success: res.data.success_message\r\n        }\r\n      });\r\n\r\n      history.push(\"/addStudent\");\r\n      console.log(res.data.success_message);\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: Types.STUDENT_ERROR,\r\n        payload: {\r\n          error: error.response.data,\r\n          hola_success: \"\",\r\n          success: \"\"\r\n        }\r\n      });\r\n    });\r\n};\r\n\r\nexport const student_list = ()=>dispatch =>{\r\n  Axios.get(\"/student/\")\r\n  .then((res) =>{\r\n    dispatch({\r\n      type:Types.STUDENT_LIST,\r\n      payload:{\r\n        student_list:res.data,\r\n        \r\n      }\r\n    })\r\n  })\r\n  .catch((error) =>{\r\n    dispatch({\r\n      type:Types.STUDENT_ERROR,\r\n      payload:{\r\n        error:error\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport const getStudentByID = id => dispatch => {\r\n  Axios.get(`/student/${id}`)\r\n    .then(response => {\r\n      dispatch({ type: Types.GET_STD_BY_ID, payload: { student: response.data } });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n};\r\nexport const SearchStd = search => dispatch => {\r\n  console.log(\"mama\")\r\n  Axios.get(`/student/std/search`, search)\r\n    .then(response => {\r\n      dispatch({\r\n        type: Types.SEARCH_STD,\r\n        payload: { search_student: response.data }\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: Types.STUDENT_ERROR,\r\n        payload: {\r\n          error: error.response.data\r\n        }\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}