{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\library_management\\\\library_admin\\\\src\\\\pages\\\\add_book.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { b_register } from \"../store/actions/bookActions\";\nconst initialState = {\n  s_name: \"\",\n  s_email: \"\",\n  s_roll: \"\",\n  s_address: \"\",\n  s_contact: \"\",\n  isSubmitted: true,\n  error: {},\n  holaboi: \"\",\n  success: \"\"\n};\nexport class Add_book extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.takeValueFromInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.holaOnSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          s_name = _this$state.s_name,\n          s_email = _this$state.s_email,\n          s_roll = _this$state.s_roll,\n          s_address = _this$state.s_address,\n          s_contact = _this$state.s_contact;\n      this.props.b_register({\n        s_name,\n        s_email,\n        s_roll,\n        s_address,\n        s_contact\n      }, this.props.history);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (JSON.stringify(nextProps.std.error) !== JSON.stringify(prevState.error)) {\n      return {\n        error: nextProps.std.error\n      };\n    } else if (JSON.stringify(nextProps.std.hola_success) !== JSON.stringify(prevState.hola_success)) {\n      return {\n        holaboi: nextProps.std.hola_success\n      };\n    } else if (JSON.stringify(nextProps.std.success) !== JSON.stringify(prevState.success)) {\n      return {\n        success: nextProps.std.success\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => this.setState({\n      success: \"\"\n    }), 3000);\n    setTimeout(() => this.setState({\n      holaboi: \"\"\n    }), 3000);\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        s_name = _this$state2.s_name,\n        s_email = _this$state2.s_email,\n        s_roll = _this$state2.s_roll,\n        s_address = _this$state2.s_address,\n        s_contact = _this$state2.s_contact,\n        error = _this$state2.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Book Add Form\"), this.state.holaboi && React.createElement(\"p\", {\n      className: \"text-danger text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.holaboi), this.state.success && React.createElement(\"p\", {\n      className: \"text-success text-center\",\n      id: \"bro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.success), React.createElement(\"form\", {\n      onSubmit: this.holaOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"BOOK CODE:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.code ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_roll\",\n      id: \"id\",\n      value: s_roll,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), error.code && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, error.code)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"NAME:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: error.name ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_name\",\n      id: \"name\",\n      value: s_name,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), \" \", error.name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, error.name))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"QUANTITY:\"), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: error.qty ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_email\",\n      id: \"email\",\n      value: s_email,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \" \", error.qty && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, error.qty)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"SELF NO:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: error.self ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_contact\",\n      id: \"contact\",\n      value: s_contact,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \" \", error.self && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, error.self))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"SELF NO:\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: error.price ? \"form-control is-invalid\" : \"form-control\",\n      name: \"s_contact\",\n      id: \"contact\",\n      value: s_contact,\n      onChange: this.takeValueFromInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), \" \", error.price && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, error.price))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-info float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Registration\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  std: state.std\n});\n\nexport default connect(mapStateToProps, {\n  s_register\n})(Add_book);","map":{"version":3,"sources":["E:\\xampp\\htdocs\\library_management\\library_admin\\src\\pages\\add_book.js"],"names":["React","Component","connect","b_register","initialState","s_name","s_email","s_roll","s_address","s_contact","isSubmitted","error","holaboi","success","Add_book","state","takeValueFromInput","e","setState","target","name","value","holaOnSubmit","preventDefault","props","history","getDerivedStateFromProps","nextProps","prevState","JSON","stringify","std","hola_success","componentDidUpdate","setTimeout","render","marginLeft","code","qty","self","price","mapStateToProps","s_register"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { b_register } from \"../store/actions/bookActions\";\r\nconst initialState = {\r\n  s_name: \"\",\r\n  s_email: \"\",\r\n  s_roll: \"\",\r\n  s_address: \"\",\r\n  s_contact: \"\",\r\n  isSubmitted: true,\r\n  error: {},\r\n  holaboi: \"\",\r\n  success: \"\"\r\n};\r\n\r\nexport class Add_book extends Component {\r\n         state = initialState;\r\n         static getDerivedStateFromProps(nextProps, prevState) {\r\n           if (\r\n             JSON.stringify(nextProps.std.error) !==\r\n             JSON.stringify(prevState.error)\r\n           ) {\r\n             return {\r\n               error: nextProps.std.error\r\n             };\r\n           } else if (\r\n             JSON.stringify(nextProps.std.hola_success) !==\r\n             JSON.stringify(prevState.hola_success)\r\n           ) {\r\n             return {\r\n               holaboi: nextProps.std.hola_success\r\n             };\r\n           } else if (\r\n             JSON.stringify(nextProps.std.success) !==\r\n             JSON.stringify(prevState.success)\r\n           ) {\r\n             return {\r\n               success: nextProps.std.success\r\n             };\r\n           }\r\n\r\n           return null;\r\n         }\r\n         takeValueFromInput = e => {\r\n           this.setState({\r\n             [e.target.name]: e.target.value\r\n           });\r\n         };\r\n\r\n         holaOnSubmit = e => {\r\n           e.preventDefault();\r\n           let { s_name, s_email, s_roll, s_address, s_contact } = this.state;\r\n           this.props.b_register(\r\n             { s_name, s_email, s_roll, s_address, s_contact },\r\n             this.props.history\r\n           );\r\n         };\r\n         componentDidUpdate() {\r\n           setTimeout(() => this.setState({ success: \"\" }), 3000);\r\n           setTimeout(() => this.setState({ holaboi: \"\" }), 3000);\r\n         }\r\n\r\n         render() {\r\n           let {\r\n             s_name,\r\n             s_email,\r\n             s_roll,\r\n             s_address,\r\n             s_contact,\r\n             error\r\n           } = this.state;\r\n           return (\r\n             <div className=\"container\">\r\n               <div className=\"row\">\r\n                 <div className=\"col-md-12 offset-md-1\">\r\n                   <h1 className=\"text-center\">Book Add Form</h1>\r\n                   {this.state.holaboi && (\r\n                     <p className=\"text-danger text-center\">\r\n                       {this.state.holaboi}\r\n                     </p>\r\n                   )}\r\n                   {this.state.success && (\r\n                     <p className=\"text-success text-center\" id=\"bro\">\r\n                       {this.state.success}\r\n                     </p>\r\n                   )}\r\n                   <form onSubmit={this.holaOnSubmit}>\r\n                     <table className=\"table \">\r\n                       <tbody>\r\n                         <tr>\r\n                           <td>\r\n                             <label style={{ marginLeft: \"80px\" }} htmlFor=\"id\">\r\n                               <b>BOOK CODE:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.code\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_roll\"\r\n                               id=\"id\"\r\n                               value={s_roll}\r\n                               onChange={this.takeValueFromInput}\r\n                             />\r\n                             {error.code && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.code}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"80px\" }}\r\n                               htmlFor=\"name\"\r\n                             >\r\n                               <b>NAME:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"text\"\r\n                               className={\r\n                                 error.name\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_name\"\r\n                               id=\"name\"\r\n                               value={s_name}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.name && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.name}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                           <td>\r\n                             <label\r\n                               style={{ marginLeft: \"80px\" }}\r\n                               htmlFor=\"email\"\r\n                             >\r\n                               <b>QUANTITY:</b>{\" \"}\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"number\"\r\n                               className={\r\n                                 error.qty\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_email\"\r\n                               id=\"email\"\r\n                               value={s_email}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.qty && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.qty}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                           <td>\r\n                             <label htmlFor=\"contact\">\r\n                               <b>SELF NO:</b>\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"number\"\r\n                               className={\r\n                                 error.self\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_contact\"\r\n                               id=\"contact\"\r\n                               value={s_contact}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.self && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.self}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                           <td>\r\n                             <label htmlFor=\"contact\">\r\n                               <b>SELF NO:</b>\r\n                             </label>\r\n                           </td>\r\n                           <td>\r\n                             <input\r\n                               type=\"number\"\r\n                               className={\r\n                                 error.price\r\n                                   ? \"form-control is-invalid\"\r\n                                   : \"form-control\"\r\n                               }\r\n                               name=\"s_contact\"\r\n                               id=\"contact\"\r\n                               value={s_contact}\r\n                               onChange={this.takeValueFromInput}\r\n                             />{\" \"}\r\n                             {error.price && (\r\n                               <div className=\"invalid-feedback\">\r\n                                 {error.price}\r\n                               </div>\r\n                             )}\r\n                           </td>\r\n                         </tr>\r\n                         <tr>\r\n                           <td></td>\r\n\r\n                           <td>\r\n                             <button className=\"btn btn-sm btn-outline-info float-right\">\r\n                               Registration\r\n                             </button>\r\n                           </td>\r\n                         </tr>\r\n                       </tbody>\r\n                     </table>\r\n                   </form>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         }\r\n       }\r\n\r\nconst mapStateToProps = state => ({\r\n  std: state.std\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { s_register }\r\n)(Add_book);\r\n"]},"metadata":{},"sourceType":"module"}